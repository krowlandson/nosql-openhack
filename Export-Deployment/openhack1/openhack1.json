{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vulnerabilityAssessments_Default_storageContainerPath": {
      "type": "SecureString"
    },
    "connections_eventhubs_name": {
      "type": "String"
    },
    "connections_documentdb_name": {
      "type": "String"
    },
    "workspaces_team6synapse_name": {
      "type": "String"
    },
    "workflows_logicappconsumer_name": {
      "type": "String"
    },
    "sites_MovieDatabaseFunctions_name": {
      "type": "String"
    },
    "storageAccounts_team6adls_name": {
      "type": "String"
    },
    "databaseAccounts_movies_name": {
      "type": "String"
    },
    "serverfarms_ASP_openhack1_831b_name": {
      "type": "String"
    },
    "serverfarms_ASP_openhack1_b320_name": {
      "type": "String"
    },
    "sites_testingestionwithfunctionapp_name": {
      "type": "String"
    },
    "sites_openhackweb_suf1x5pkkj5vj7oec_name": {
      "type": "String"
    },
    "servers_openhacksqlsuf1x5pkkj5vj7oec_name": {
      "type": "String"
    },
    "storageAccounts_testbacpacopenhack_name": {
      "type": "String"
    },
    "searchServices_moviescognitivesearch_name": {
      "type": "String"
    },
    "streamingjobs_consumeevents_name": {
      "type": "String"
    },
    "serverfarms_openhackplan_suf1x5pkkj5vj7oec_name": {
      "type": "String"
    },
    "storageAccounts_storageaccountopenh9228_name": {
      "type": "String"
    },
    "components_testingestionwithfunctionapp_name": {
      "type": "String"
    },
    "namespaces_openhackhub_suf1x5pkkj5vj7oec_name": {
      "type": "String"
    },
    "actionGroups_Application_Insights_Smart_Detection_name": {
      "type": "String"
    },
    "smartdetectoralertrules_failure_anomalies___testingestionwithfunctionapp_name": {
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2020-06-01-preview",
      "name": "[parameters('databaseAccounts_movies_name')]",
      "location": "North Europe",
      "tags": {
        "defaultExperience": "Core (SQL)",
        "hidden-cosmos-mmspecial": "",
        "CosmosAccountType": "Non-Production"
      },
      "kind": "GlobalDocumentDB",
      "identity": {
        "type": "None"
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": true,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "disableKeyBasedMetadataWriteAccess": false,
        "enableFreeTier": true,
        "enableAnalyticalStorage": true,
        "createMode": "Default",
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "North Europe",
            "provisioningState": "Succeeded",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "cors": [],
        "capabilities": [],
        "ipRules": [],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8
          }
        }
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2018-01-01-preview",
      "name": "[parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name')]",
      "location": "North Europe",
      "tags": {
        "tag1": "value1",
        "tag2": "value2"
      },
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": true,
        "maximumThroughputUnits": 2,
        "kafkaEnabled": true
      }
    },
    {
      "type": "microsoft.insights/actionGroups",
      "apiVersion": "2019-03-01",
      "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
      "location": "Global",
      "properties": {
        "groupShortName": "SmartDetect",
        "enabled": true,
        "emailReceivers": [],
        "smsReceivers": [],
        "webhookReceivers": [],
        "itsmReceivers": [],
        "azureAppPushReceivers": [],
        "automationRunbookReceivers": [],
        "voiceReceivers": [],
        "logicAppReceivers": [],
        "azureFunctionReceivers": []
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[parameters('components_testingestionwithfunctionapp_name')]",
      "location": "northeurope",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "IbizaWebAppExtensionCreate",
        "RetentionInDays": 90,
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('workflows_logicappconsumer_name')]",
      "location": "northeurope",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "triggers": {},
          "actions": {},
          "outputs": {}
        },
        "parameters": {}
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2020-08-01",
      "name": "[parameters('searchServices_moviescognitivesearch_name')]",
      "location": "North Europe",
      "sku": {
        "name": "basic"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "Default",
        "publicNetworkAccess": "Enabled",
        "networkRuleSet": {
          "ipRules": []
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2019-06-01-preview",
      "name": "[parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name')]",
      "location": "northeurope",
      "tags": {
        "displayName": "SqlServer"
      },
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "openhackadmin",
        "version": "12.0",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "name": "[parameters('storageAccounts_storageaccountopenh9228_name')]",
      "location": "northeurope",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "name": "[parameters('storageAccounts_team6adls_name')]",
      "location": "northeurope",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "name": "[parameters('storageAccounts_testbacpacopenhack_name')]",
      "location": "northeurope",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "apiVersion": "2017-04-01-preview",
      "name": "[parameters('streamingjobs_consumeevents_name')]",
      "location": "North Europe",
      "identity": {
        "principalId": "e3a27adb-263d-47c7-b69c-2c739bc902e3",
        "tenantId": "535c7207-dfc6-4231-ae99-dc2e4903621a",
        "type": "SystemAssigned"
      },
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "outputStartMode": "JobStartTime",
        "outputStartTime": "2020-11-19T10:51:13.58Z",
        "eventsOutOfOrderPolicy": "Adjust",
        "outputErrorPolicy": "Stop",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "compatibilityLevel": "1.2",
        "jobType": "Cloud"
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2019-06-01-preview",
      "name": "[parameters('workspaces_team6synapse_name')]",
      "location": "northeurope",
      "identity": {
        "principalId": "a60ddceb-eef7-408e-aa75-4be4fb6307fe",
        "tenantId": "535c7207-dfc6-4231-ae99-dc2e4903621a",
        "type": "SystemAssigned"
      },
      "properties": {
        "connectivityEndpoints": {
          "web": "[concat('https://web.azuresynapse.net?workspace=%2fsubscriptions%2f50ac70f9-f7ba-41eb-9822-610944d9f6cc%2fresourceGroups%2fopenhack1%2fproviders%2fMicrosoft.Synapse%2fworkspaces%2f', parameters('workspaces_team6synapse_name'))]",
          "dev": "[concat('https://', parameters('workspaces_team6synapse_name'), '.dev.azuresynapse.net')]",
          "sqlOnDemand": "[concat(parameters('workspaces_team6synapse_name'), '-ondemand.sql.azuresynapse.net')]",
          "sql": "[concat(parameters('workspaces_team6synapse_name'), '.sql.azuresynapse.net')]"
        },
        "managedResourceGroupName": "synapseworkspace-managedrg-761b165a-3f36-4a93-9848-bf53ec5a0d29",
        "defaultDataLakeStorage": {
          "accountUrl": "https://team6adls.dfs.core.windows.net",
          "filesystem": "team6storage"
        },
        "sqlAdministratorLogin": "sqladminuser",
        "privateEndpointConnections": []
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('connections_documentdb_name')]",
      "location": "northeurope",
      "kind": "V1",
      "properties": {
        "displayName": "CosmosMovies",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/50ac70f9-f7ba-41eb-9822-610944d9f6cc/providers/Microsoft.Web/locations/northeurope/managedApis/', parameters('connections_documentdb_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('connections_eventhubs_name')]",
      "location": "northeurope",
      "kind": "V1",
      "properties": {
        "displayName": "EventHub1",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/50ac70f9-f7ba-41eb-9822-610944d9f6cc/providers/Microsoft.Web/locations/northeurope/managedApis/', parameters('connections_eventhubs_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('serverfarms_ASP_openhack1_831b_name')]",
      "location": "North Europe",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('serverfarms_ASP_openhack1_b320_name')]",
      "location": "North Europe",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('serverfarms_openhackplan_suf1x5pkkj5vj7oec_name')]",
      "location": "North Europe",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "F1",
        "tier": "Free",
        "size": "F1",
        "family": "F",
        "capacity": 0
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "movies"
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), '/RootManageSharedAccessKey')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), '/telemetry')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 4,
        "partitionCount": 2,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/networkRuleSets",
      "apiVersion": "2018-01-01-preview",
      "name": "[concat(parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), '/default')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "defaultAction": "Deny",
        "virtualNetworkRules": [],
        "ipRules": []
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/CreateIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/DbParameterization')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/DefragmentIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/DropIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/ForceLastGoodPlan')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Default')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "auditActionsAndGroups": [],
        "isStorageSecondaryKeyInUse": false,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies')]",
      "location": "northeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "sku": {
        "name": "Basic",
        "tier": "Basic",
        "capacity": 5
      },
      "kind": "v12.0,user",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 2147483648,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false,
        "readScale": "Disabled",
        "storageAccountType": "GRS"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/master/Default')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/master/Default')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "state": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
      "apiVersion": "2020-02-02-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "state": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/master/current')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "status": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "recurringScans": {
          "isEnabled": false,
          "emailSubscriptionAdmins": true
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers/encryptionProtector",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/current')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "kind": "servicemanaged",
      "properties": {
        "serverKeyName": "ServiceManaged",
        "serverKeyType": "ServiceManaged"
      }
    },
    {
      "type": "Microsoft.Sql/servers/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "auditActionsAndGroups": [],
        "isStorageSecondaryKeyInUse": false,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      }
    },
    {
      "type": "Microsoft.Sql/servers/keys",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/ServiceManaged')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "kind": "servicemanaged",
      "properties": {
        "serverKeyType": "ServiceManaged"
      }
    },
    {
      "type": "Microsoft.Sql/servers/securityAlertPolicies",
      "apiVersion": "2020-02-02-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "state": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
      "apiVersion": "2018-06-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "recurringScans": {
          "isEnabled": false,
          "emailSubscriptionAdmins": true
        },
        "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_storageaccountopenh9228_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountopenh9228_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_team6adls_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_team6adls_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_testbacpacopenhack_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testbacpacopenhack_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_storageaccountopenh9228_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountopenh9228_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_team6adls_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_team6adls_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_testbacpacopenhack_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testbacpacopenhack_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_storageaccountopenh9228_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountopenh9228_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_team6adls_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_team6adls_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_testbacpacopenhack_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testbacpacopenhack_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_storageaccountopenh9228_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountopenh9228_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_team6adls_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_team6adls_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_testbacpacopenhack_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testbacpacopenhack_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/inputs",
      "apiVersion": "2017-04-01-preview",
      "name": "[concat(parameters('streamingjobs_consumeevents_name'), '/eventorder')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_consumeevents_name'))]"
      ],
      "properties": {
        "type": "Stream",
        "datasource": {
          "type": "Microsoft.EventHub/EventHub",
          "properties": {
            "consumerGroupName": "consumeevents_eventorder_consumer_group",
            "eventHubName": "telemetry",
            "serviceBusNamespace": "openhackhub-suf1x5pkkj5vj7oec",
            "sharedAccessPolicyName": "consumeevents_eventorder_policy",
            "authenticationMode": "ConnectionString"
          }
        },
        "compression": {
          "type": "None"
        },
        "serialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2017-04-01-preview",
      "name": "[concat(parameters('streamingjobs_consumeevents_name'), '/eventagregate')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_consumeevents_name'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/DocumentDB",
          "properties": {
            "collectionNamePattern": "aggregate",
            "accountId": "movies",
            "database": "movies"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2017-04-01-preview",
      "name": "[concat(parameters('streamingjobs_consumeevents_name'), '/eventtarget')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_consumeevents_name'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/DocumentDB",
          "properties": {
            "collectionNamePattern": "eventstream",
            "accountId": "movies",
            "database": "movies"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2017-04-01-preview",
      "name": "[concat(parameters('streamingjobs_consumeevents_name'), '/eventtarget-cosmoslink')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_consumeevents_name'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/DocumentDB",
          "properties": {
            "collectionNamePattern": "synapseeventstream",
            "accountId": "movies",
            "database": "movies"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2017-04-01-preview",
      "name": "[concat(parameters('streamingjobs_consumeevents_name'), '/hacker5powerbi')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_consumeevents_name'))]"
      ],
      "properties": {
        "datasource": {
          "type": "PowerBI",
          "properties": {
            "authenticationMode": "UserToken",
            "dataset": "streamanalyticsdataset",
            "table": "aggregate",
            "groupId": "df8ab471-0152-4bac-b032-45a3c06c648c",
            "groupName": "powerbiworkspace",
            "tokenUserPrincipalName": "hacker5fzn@OTAPRD173ops.onmicrosoft.com",
            "tokenUserDisplayName": " "
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2017-04-01-preview",
      "name": "[concat(parameters('streamingjobs_consumeevents_name'), '/WtreamPowerBIteam6')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_consumeevents_name'))]"
      ],
      "properties": {
        "datasource": {
          "type": "PowerBI",
          "properties": {
            "authenticationMode": "UserToken",
            "dataset": "eventsstream",
            "table": "streamagg",
            "groupId": "73dd8a9a-711d-4919-8e0b-5a629f92cab9",
            "groupName": "ohstream",
            "tokenUserPrincipalName": "hacker3a7h@OTAPRD173ops.onmicrosoft.com",
            "tokenUserDisplayName": " "
          }
        }
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces/bigDataPools",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(parameters('workspaces_team6synapse_name'), '/team6')]",
      "location": "northeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_team6synapse_name'))]"
      ],
      "properties": {
        "creationDate": "2020-11-19T10:35:09.43Z",
        "sparkVersion": "2.4",
        "nodeCount": 10,
        "nodeSize": "Small",
        "nodeSizeFamily": "MemoryOptimized",
        "autoScale": {
          "enabled": true,
          "minNodeCount": 3,
          "maxNodeCount": 10
        },
        "autoPause": {
          "enabled": true,
          "delayInMinutes": 15
        },
        "isComputeIsolationEnabled": false,
        "provisioningState": "Succeeded"
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces/firewallRules",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(parameters('workspaces_team6synapse_name'), '/allowAll')]",
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_team6synapse_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces/integrationruntimes",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(parameters('workspaces_team6synapse_name'), '/AutoResolveIntegrationRuntime')]",
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_team6synapse_name'))]"
      ],
      "properties": {
        "type": "Managed",
        "typeProperties": {
          "computeProperties": {
            "location": "AutoResolve"
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('sites_MovieDatabaseFunctions_name')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_openhack1_b320_name'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "moviedatabasefunctions.azurewebsites.net",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "moviedatabasefunctions.scm.azurewebsites.net",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_openhack1_b320_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {},
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_openhackplan_suf1x5pkkj5vj7oec_name'))]"
      ],
      "tags": {
        "displayName": "Website",
        "hidden-related:/subscriptions/50ac70f9-f7ba-41eb-9822-610944d9f6cc/resourceGroups/openhack1/providers/Microsoft.Web/serverfarms/openhackplan-suf1x5pkkj5vj7oec": "empty"
      },
      "kind": "app",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_openhackplan_suf1x5pkkj5vj7oec_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {},
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('sites_testingestionwithfunctionapp_name')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_openhack1_831b_name'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('sites_testingestionwithfunctionapp_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('sites_testingestionwithfunctionapp_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_openhack1_831b_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {},
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_MovieDatabaseFunctions_name'), '/web')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_MovieDatabaseFunctions_name'))]"
      ],
      "properties": {
        "numberOfWorkers": -1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$MovieDatabaseFunctions",
        "azureStorageAccounts": {},
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "cors": {
          "allowedOrigins": [
            "https://functions.azure.com",
            "https://functions-staging.azure.com",
            "https://functions-next.azure.com"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name'), '/web')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name'))]"
      ],
      "tags": {
        "displayName": "Website",
        "hidden-related:/subscriptions/50ac70f9-f7ba-41eb-9822-610944d9f6cc/resourceGroups/openhack1/providers/Microsoft.Web/serverfarms/openhackplan-suf1x5pkkj5vj7oec": "empty"
      },
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$openhackweb-suf1x5pkkj5vj7oec",
        "azureStorageAccounts": {},
        "scmType": "ExternalGit",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_testingestionwithfunctionapp_name'), '/web')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_testingestionwithfunctionapp_name'))]"
      ],
      "properties": {
        "numberOfWorkers": -1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$testingestionwithfunctionapp",
        "azureStorageAccounts": {},
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "cors": {
          "allowedOrigins": [
            "https://functions.azure.com",
            "https://functions-staging.azure.com",
            "https://functions-next.azure.com"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/deployments",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name'), '/acf75365f211440e5480edbfb87f18cff19f1f6f')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "status": 4,
        "author_email": "joelhulen@gmail.com",
        "author": "Joel Hulen",
        "deployer": "GitHub",
        "message": "Merge pull request #3 from kyleburnsdev/patch-1\n\nAdds website availability check",
        "start_time": "2020-11-10T17:27:12.3326664Z",
        "end_time": "2020-11-10T17:28:31.3025235Z",
        "active": true
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_MovieDatabaseFunctions_name'), '/CategoryCacheInvalidator')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_MovieDatabaseFunctions_name'))]"
      ],
      "properties": {
        "script_root_path_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/CategoryCacheInvalidator/",
        "script_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/CategoryCacheInvalidator/index.js",
        "config_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/CategoryCacheInvalidator/function.json",
        "href": "https://moviedatabasefunctions.azurewebsites.net/admin/functions/CategoryCacheInvalidator",
        "config": {},
        "test_data": "[[{ 'id': 'test_document' }]"
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_testingestionwithfunctionapp_name'), '/FunctionThatTriggersOnCategoryChanges')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_testingestionwithfunctionapp_name'))]"
      ],
      "properties": {
        "script_root_path_href": "https://testingestionwithfunctionapp.azurewebsites.net/admin/vfs/site/wwwroot/FunctionThatTriggersOnCategoryChanges/",
        "script_href": "https://testingestionwithfunctionapp.azurewebsites.net/admin/vfs/site/wwwroot/FunctionThatTriggersOnCategoryChanges/index.js",
        "config_href": "https://testingestionwithfunctionapp.azurewebsites.net/admin/vfs/site/wwwroot/FunctionThatTriggersOnCategoryChanges/function.json",
        "href": "https://testingestionwithfunctionapp.azurewebsites.net/admin/functions/FunctionThatTriggersOnCategoryChanges",
        "config": {},
        "test_data": "[[{ 'id': 'test_document' }]"
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_MovieDatabaseFunctions_name'), '/LastHourOrderCounter')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_MovieDatabaseFunctions_name'))]"
      ],
      "properties": {
        "script_root_path_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/LastHourOrderCounter/",
        "script_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/LastHourOrderCounter/index.js",
        "config_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/LastHourOrderCounter/function.json",
        "href": "https://moviedatabasefunctions.azurewebsites.net/admin/functions/LastHourOrderCounter",
        "config": {},
        "test_data": "[[{ 'id': 'test_document' }]"
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_MovieDatabaseFunctions_name'), '/MostPurchasedMovieCacheUpdater')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_MovieDatabaseFunctions_name'))]"
      ],
      "properties": {
        "script_root_path_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/MostPurchasedMovieCacheUpdater/",
        "script_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/MostPurchasedMovieCacheUpdater/index.js",
        "config_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/MostPurchasedMovieCacheUpdater/function.json",
        "href": "https://moviedatabasefunctions.azurewebsites.net/admin/functions/MostPurchasedMovieCacheUpdater",
        "config": {},
        "test_data": "[[\n  {\n    \"id\": \"sample\"\n  }\n]"
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_MovieDatabaseFunctions_name'), '/PopularityCounter')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_MovieDatabaseFunctions_name'))]"
      ],
      "properties": {
        "script_root_path_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/PopularityCounter/",
        "script_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/PopularityCounter/index.js",
        "config_href": "https://moviedatabasefunctions.azurewebsites.net/admin/vfs/site/wwwroot/PopularityCounter/function.json",
        "href": "https://moviedatabasefunctions.azurewebsites.net/admin/functions/PopularityCounter",
        "config": {}
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_MovieDatabaseFunctions_name'), '/', parameters('sites_MovieDatabaseFunctions_name'), '.azurewebsites.net')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_MovieDatabaseFunctions_name'))]"
      ],
      "properties": {
        "siteName": "MovieDatabaseFunctions",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name'), '/', parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name'), '.azurewebsites.net')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_openhackweb_suf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "siteName": "openhackweb-suf1x5pkkj5vj7oec",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_testingestionwithfunctionapp_name'), '/', parameters('sites_testingestionwithfunctionapp_name'), '.azurewebsites.net')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_testingestionwithfunctionapp_name'))]"
      ],
      "properties": {
        "siteName": "testingestionwithfunctionapp",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "microsoft.alertsmanagement/smartdetectoralertrules",
      "apiVersion": "2019-06-01",
      "name": "[parameters('smartdetectoralertrules_failure_anomalies___testingestionwithfunctionapp_name')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_testingestionwithfunctionapp_name'))]",
        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
      ],
      "properties": {
        "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
        "state": "Enabled",
        "severity": "Sev3",
        "frequency": "PT1M",
        "detector": {
          "id": "FailureAnomaliesDetector",
          "name": "Failure Anomalies",
          "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
          "supportedResourceTypes": [
            "ApplicationInsights"
          ]
        },
        "scope": [
          "[resourceId('microsoft.insights/components', parameters('components_testingestionwithfunctionapp_name'))]"
        ],
        "actionGroups": {
          "groupIds": [
            "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
          ]
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/aggregate')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "aggregate",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/Agr_Dayofyear"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/Cartitem')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "Cartitem",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*",
                "indexes": [
                  {
                    "kind": "Range",
                    "dataType": "Number",
                    "precision": -1
                  },
                  {
                    "kind": "Range",
                    "dataType": "String",
                    "precision": -1
                  }
                ]
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/CartId"
            ],
            "kind": "Hash"
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/Category')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "Category",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*",
                "indexes": [
                  {
                    "kind": "Range",
                    "dataType": "Number",
                    "precision": -1
                  },
                  {
                    "kind": "Range",
                    "dataType": "String",
                    "precision": -1
                  }
                ]
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/CategoryName"
            ],
            "kind": "Hash"
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/Event')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "Event",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/eventstream')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "eventstream",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/Email"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/Item')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "Item",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/ItemId"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/ItemAggregate')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "ItemAggregate",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/ItemId"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/leases')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "leases",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/MaterializedViews')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "MaterializedViews",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/name"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/neworders')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "neworders",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/OrderId"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/OrderDetails')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "OrderDetails",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/OrderId"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/Orders')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "Orders",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/OrderId"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/synapseeventstream')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "synapseeventstream",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/Email"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/User')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "User",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/CategoryId"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "throughput": 2000
        }
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), '/telemetry/consumeevents_eventorder_policy')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), 'telemetry')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), '/telemetry/DataGeneratorAccessPolicy')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), 'telemetry')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), '/telemetry/$Default')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), 'telemetry')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "userMetadata": "User Metadata goes here"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), '/telemetry/consumeevents_eventorder_consumer_group')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'), 'telemetry')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_openhackhub_suf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {}
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/CreateIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/DbParameterization')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/DefragmentIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/DropIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/ForceLastGoodPlan')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/Default')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "weeklyRetention": "PT0S",
        "monthlyRetention": "PT0S",
        "yearlyRetention": "PT0S",
        "weekOfYear": 0
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
      "apiVersion": "2020-02-02-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "retentionDays": 7
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/Default')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "state": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
      "apiVersion": "2020-02-02-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "state": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/current')]",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "status": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), '/Movies/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'), 'Movies')]",
        "[resourceId('Microsoft.Sql/servers', parameters('servers_openhacksqlsuf1x5pkkj5vj7oec_name'))]"
      ],
      "properties": {
        "recurringScans": {
          "isEnabled": false,
          "emailSubscriptionAdmins": true
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_storageaccountopenh9228_name'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountopenh9228_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountopenh9228_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_storageaccountopenh9228_name'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountopenh9228_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountopenh9228_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_testbacpacopenhack_name'), '/default/cache')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_testbacpacopenhack_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testbacpacopenhack_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_testbacpacopenhack_name'), '/default/merge')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_testbacpacopenhack_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testbacpacopenhack_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_testbacpacopenhack_name'), '/default/migration')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_testbacpacopenhack_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testbacpacopenhack_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_testbacpacopenhack_name'), '/default/restore')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_testbacpacopenhack_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testbacpacopenhack_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_team6adls_name'), '/default/team6storage')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_team6adls_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_team6adls_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_storageaccountopenh9228_name'), '/default/moviedatabasefunctions8a3d')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_storageaccountopenh9228_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountopenh9228_name'))]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized",
        "shareQuota": 5120,
        "enabledProtocols": "SMB"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(parameters('storageAccounts_storageaccountopenh9228_name'), '/default/testingestionwithfunctionappa773')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_storageaccountopenh9228_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountopenh9228_name'))]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized",
        "shareQuota": 5120,
        "enabledProtocols": "SMB"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/Cartitem/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'), 'Cartitem')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "throughput": 4000
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
      "apiVersion": "2020-06-01-preview",
      "name": "[concat(parameters('databaseAccounts_movies_name'), '/', parameters('databaseAccounts_movies_name'), '/Category/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'), 'Category')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_movies_name'), parameters('databaseAccounts_movies_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_movies_name'))]"
      ],
      "properties": {
        "resource": {
          "throughput": 1000
        }
      }
    }
  ]
}